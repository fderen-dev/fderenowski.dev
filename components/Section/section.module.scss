@use "sass:map";
@use "styles/mixins";
@use "styles/variables" as vars;

.section,
.header {
  position: relative;
  z-index: vars.$z-index-content;
}

.section {
  display: flex;
  min-height: 70vh;
  flex-direction: column;
  justify-content: center;
  text-align: justify;
  transition-duration: 0.6s;
  transition-property: filter, opacity;
  transition-timing-function: linear;

  > :not(h2)::before {
    position: absolute;
    width: min(80%, 700px);
    height: 300px;
    box-sizing: content-box;
    background: linear-gradient(
      270deg,
      rgb(0 0 0 / 20%) 35%,
      rgb(0 0 0 / 0%) 100%
    );
    content: "";
    transform: translateY(-15%);
  }

  &.left,
  &.center,
  &.right {
    grid-column: 1/5;
  }

  &.left {
    grid-column: 1/5;

    > :not(h2)::before {
      left: -2%;
    }
  }

  &.right {
    grid-column: 1/5;

    > :not(h2)::before {
      right: -2%;
    }
  }

  &.outOfViewport {
    filter: blur(100px);
    opacity: 0;
  }

  &.inViewport {
    filter: blur(0);
    opacity: 1;
  }
}

.header {
  position: relative;
  width: 100%;

  &::after {
    position: absolute;
    display: block;
    width: 50%;
    height: 200%;
    background: vars.$g-yellow-subheader;
    content: "";
    transform: translate(-5%, -75%);
  }

  &.left {
    text-align: left;
  }

  &.right {
    text-align: right;
  }

  .headerText {
    position: relative;
    z-index: vars.$z-index-text-background;
    display: block;
  }
}

@include mixins.min-width(map.get(vars.$media, "tablet")) {
  .section {
    &.left {
      grid-column: 1/7;
    }

    &.center {
      grid-column: 2 / 8;
    }

    &.right {
      grid-column: 4/9;
    }
  }
}

@include mixins.min-width(map.get(vars.$media, "desktop")) {
  .section {
    > :not(h2)::before {
      top: -22%;
    }

    &.left {
      grid-column: 1/10;
    }

    &.center {
      grid-column: 2 / 12;
    }

    &.right {
      grid-column: 6/13;
    }
  }
}
